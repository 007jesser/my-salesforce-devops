trigger:
  branches:
    include:
      - main
      - dev
      - feature/*

pool:
  name: Default

variables:
  SF_CLIENT_ID: ''  # Will be overridden from pipeline variables
  SF_DEVHUB_USERNAME: ''  # Will be overridden from pipeline variables
  SCRATCH_ORG_ALIAS: 'ci-scratch-org'
  SCRATCH_DEF_FILE: 'config/project-scratch-def.json'
  PMD_RULESET: 'rulesets/apex/quickstart.xml'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm install --global sfdx-cli
    sfdx --version
  displayName: 'Install Salesforce CLI'

- checkout: self

- task: DownloadSecureFile@1
  name: downloadJWTKey
  inputs:
    secureFile: 'server.key'  # Make sure this matches the uploaded secure file name

- script: |
    echo Authenticating with DevHub using JWT...
    sfdx auth:jwt:grant \
      --clientid $(SF_CLIENT_ID) \
      --jwtkeyfile $(Agent.TempDirectory)/server.key \
      --username $(SF_DEVHUB_USERNAME) \
      --setdefaultdevhubusername \
      --loglevel DEBUG
  displayName: 'Authenticate with DevHub (JWT)'

- script: |
    sfdx force:org:create \
      --definitionfile $(SCRATCH_DEF_FILE) \
      --setalias $(SCRATCH_ORG_ALIAS) \
      --setdefaultusername \
      --durationdays 1 \
      --wait 10
  displayName: 'Create Scratch Org'

- script: |
    echo "Running PMD Static Code Analysis"
    ./pmd-bin-7.16.0/bin/pmd.bat check -d force-app -R $(PMD_RULESET) -f text
  displayName: 'Run PMD Code Analysis'

- script: |
    echo "Running Apex tests"
    sfdx force:apex:test:run --wait 10 --resultformat human --codecoverage --outputdir test-results
  displayName: 'Run Apex Tests'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: 'test-results/test-result-*.xml'
    testRunTitle: 'Apex Test Results'

- script: |
    echo "Deploying source to Scratch Org"
    sfdx force:source:push --targetusername $(SCRATCH_ORG_ALIAS) --wait 10
  displayName: 'Deploy to Scratch Org'
